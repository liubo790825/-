@{;
    ViewBag.Title = "学生信息列表";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<script>;
    $(function () {
        InitialPage();
        GetGrid();
    });
    var todt = new Date();

    var subgrid_table_id;
    var secrow;
    //根据ID号返回数据字典的名称
    function GetName(itemdetailid)
    {
        var getitemdata;
        $.ajax({
            url: "/ClientData/GetDataItemModel",
            data: { ItemDetailId: itemdetailid },
            type: "post",
            dataType: "json",
            async: false,
            success: function (data) {
                getitemdata = data;
            }
        });
        if (getitemdata==null) {
            return "";
        }
        return getitemdata.ItemName;
    }
    //格式化日期
    function dataformat(strdate) {
        if (strdate == "") {
            return "格式错误";
        }
        var dt = new Date(strdate);
        var age = parseInt(todt - dt);
        return dt.getFullYear() + "年" + dt.getMonth() + "月" + dt.getDay() + "日";
    }

    //初始化页面
    function InitialPage() {
        //resize重设布局;
        $(window).resize(function (e) {
            window.setTimeout(function () {
                $('#gridTable').setGridWidth(($('.gridPanel').width()));
                $('#gridTable').setGridHeight($(window).height() - 146.5);
            }, 200);
            e.stopPropagation();
        });
    }
    //加载表格
    function GetGrid() {
        var selectedRowIndex = 0;
        var $gridTable = $('#gridTable');
        $gridTable.jqGrid({
            autowidth: true,
            height: $(window).height() - 146.5,
            url: "../../CollegeMIS/BK_StuInfo/GetPageListJson",
            datatype: "json",
            colModel: [
                { label: 'stuInfoId', name: 'stuInfoId', index: 'stuInfoId', width: 80, align: '', sortable: true, hidden: true },
                { label: '照片', name: 'HeadImg', index: 'HeadImg', width: 50, align: 'center',
                    formatter: function (cellvalue, options, rowObject)
                    {
                        if (cellvalue!=null && cellvalue!="" ) {
                            return '<img src="' + cellvalue + '" alt="头像" style="width:40px;height:40px;" />';
                        }
                        return "";
                    }
                },
                  { label: '姓名', name: 'StuName', index: 'StuName', width: 80, align: '' },
                 { label: '身份证号', name: 'IdentityCardNo', index: 'IdentityCardNo', width: 180, align: '' },
                  { label: '性别', name: 'Gender', index: 'Gender', width: 30, align: '', sortable: true },
                  {
                      label: '出生日期', name: 'Birthday', index: 'Birthday', width: 90, align: '', //formatter: dataformat,
                      formatter: function (cellvalue, options, rowObject) {
                          return formatDate(cellvalue, 'yyyy-MM-dd');
                      }
                  },
                  { label: '学号', name: 'StuNo', index: 'StuNo', width: 150, align: '', sortable: true },
                { label: '通知书号', name: 'NoticeNo', index: 'NoticeNo', width: 150, align: '',sortable: true  },
                { label: '考生号', name: 'ksh', index: 'ksh', width: 150, align: '',sortable: true  },
                { label: '准考证号', name: 'zkzh', index: 'zkzh', width: 150, align: '',sortable: true  },               
                {
                    label: '院系', name: 'DeptNo', index: 'DeptNo', width: 80, align: '', formatter: function (cellvalue, options, rowObject) {
                        return top.bk_deptlist[cellvalue] == null ? "" : top.bk_deptlist[cellvalue].FullName;
                    }
                },
                {
                    label: '专业', name: 'MajorNo', index: 'MajorNo', width: 80, align: '', formatter: function (cellvalue, options, rowObject) {
                        return top.bk_majorlist[cellvalue] == null ? "" : top.bk_majorlist[cellvalue].FullName;
                    }
                },
                {
                    label: '班级', name: 'ClassNo', index: 'ClassNo', width: 80, align: '', sortable: true, formatter: function (cellvalue, options, rowObject) {
                        return top.bk_classinfolist[cellvalue] == null ? "" : top.bk_classinfolist[cellvalue].FullName;
                    }
                },
                 { label: '入学年份', name: 'Grade', index: 'Grade', width: 80, align: '' },
                { label: '招生季节', name: 'RecruitYearDate', index: 'RecruitYearDate', width: 80, align: '' },
                { label: '在校状态', name: 'Graduation', index: 'Graduation', width: 80, align: '' },
                //{ label: '专业方向号（如0，1，2，3，4，5）   0代表无专业方向细分', name: 'MajorDetailNok', index: 'MajorDetailNok', width: 80, align: '',sortable: true  },
                //{ label: '专业方向名', name: 'MajorDetailName', index: 'MajorDetailName', width: 80, align: '',sortable: true  },                
                { label: '政治面貌', name: 'PartyFaceNo', index: 'PartyFaceNo', width: 80, align: '' },
                { label: '家庭出身', name: 'FamilyOriginNo', index: 'FamilyOriginNo', width: 80, align: ''  },
                {label: '民族', name: 'NationalityNo', index: 'NationalityNo', width: 80, align: ''
                    // , formatter: GetName 
                },
                { label: '办学类型', name: 'StuOther3', index: 'StuOther3', width: 80, align: '' },
                { label: '培养类别', name: 'StuOther1', index: 'StuOther1', width: 80, align: ''  },
                { label: '培养对象', name: 'StuOther2', index: 'StuOther2', width: 80, align: ''  },
                 { label: '培养层次', name: 'GraduateNo', index: 'GraduateNo', width: 80, align: '' },

                { label: '户口类别', name: 'ResidenceNo', index: 'ResidenceNo', width: 80, align: '', formatter: GetName },
                { label: '考生类别', name: 'TestStuSortNo', index: 'TestStuSortNo', width: 80, align: '' },
                { label: '健康状况', name: 'HealthStatusNo', index: 'HealthStatusNo', width: 80, align: ''  },
                { label: '第几志愿', name: 'WillNo', index: 'WillNo', width: 80, align: '' },
                { label: '考生科类', name: 'TestStuSubjectNo', index: 'TestStuSubjectNo', width: 80, align: '' },

                { label: '计划形式', name: 'PlanFormNo', index: 'PlanFormNo', width: 80, align: ''  },
                { label: '高考类别', name: 'HighTestSortNo', index: 'HighTestSortNo', width: 80, align: '' },
                { label: '高考总分', name: 'HighAmountScore', index: 'HighAmountScore', width: 50, align: '' },
                { label: '政治成绩', name: 'PoliticsScore', index: 'PoliticsScore', width: 50, align: '' },
                { label: '语文成绩', name: 'ChineseScore', index: 'ChineseScore', width: 50, align: ''  },
                { label: '数学成绩', name: 'MathScore', index: 'MathScore', width: 50, align: ''  },
                { label: '物理成绩', name: 'PhysicsScore', index: 'PhysicsScore', width: 50, align: ''  },
                { label: '化学成绩', name: 'ChemScore', index: 'ChemScore', width: 50, align: ''  },
                { label: '生物成绩', name: 'BiologyScore', index: 'BiologyScore', width: 50, align: ''  },
                { label: '外语成绩', name: 'ForeignLangScore', index: 'ForeignLangScore', width: 50, align: ''  },
                { label: '外语口试成绩', name: 'ForeignLangOralScore', index: 'ForeignLangOralScore', width: 50, align: ''  },
                { label: '外语语种', name: 'ForeignLangSpecies', index: 'ForeignLangSpecies', width: 80, align: ''  },
                
                { label: '录取类别', name: 'MatriculateSort', index: 'MatriculateSort', width: 80, align: '',sortable: true  },

                { label: '籍贯', name: 'RegionNo', index: 'RegionNo', width: 80, align: '',sortable: true  },
                { label: '备注', name: 'Remark', index: 'Remark', width: 80, align: '' },
                
                { label: '原中学', name: 'HighSchoolName', index: 'HighSchoolName', width: 80, align: '' },
                { label: '特长', name: 'GoodAt', index: 'GoodAt', width: 80, align: '',sortable: true  },
                { label: '报到日期', name: 'ArriveDate', index: 'ArriveDate', width: 80, align: ''  },
                { label: '档案号', name: 'ArchivesNo', index: 'ArchivesNo', width: 80, align: ''  },
                { label: '电话', name: 'telephone', index: 'telephone', width: 80, align: ''  },
                {
                    label: '生源省份', name: 'StuFromProvince', index: 'StuFromProvince', width: 200,  sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        var prv = top.clientareaItem[cellvalue] == null ? "" : top.clientareaItem[cellvalue].FullName;//省
                        var ct = top.clientareaItem[rowObject.StuFromCity] == null ? "" : top.clientareaItem[rowObject.StuFromCity].FullName;//市
                        var dt = top.clientareaItem[rowObject.StuFromDestrict] == null ? "" : top.clientareaItem[rowObject.StuFromDestrict].FullName;//区
                        return prv;// +ct+dt;
                    }
                },
                {
                    label: '生源地区', name: 'StuFromCity', index: 'StuFromCity', width: 80, align: '', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        return top.clientareaItem[cellvalue] == null ? "" : top.clientareaItem[cellvalue].FullName;
                    }
                },
                //{
                //    label: '学生来自区', name: 'StuFromDestrict', index: 'StuFromDestrict', width: 80, align: '', sortable: true,
                //    formatter: function (cellvalue, options, rowObject) {
                //        return top.clientareaItem[cellvalue] == null ? "" : top.clientareaItem[cellvalue].FullName;
                //    }
                //},
                {
                    label: '详细通讯地址（父母居住地为主）', name: 'FamliyProvince', index: 'FamliyProvince', width: 280, align: '', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        var prv = top.clientareaItem[cellvalue] == null ? "" : top.clientareaItem[cellvalue].FullName;//省
                        var ct = top.clientareaItem[rowObject.FamliyCity] == null ? "" : top.clientareaItem[rowObject.FamliyCity].FullName;//市
                        var dt = top.clientareaItem[rowObject.FamliyDistrict] == null ? "" : top.clientareaItem[rowObject.FamliyDistrict].FullName;//区
                        return prv + ct + dt + rowObject.FamilyAddress;
                    }
                },
                //{
                //    label: '家庭所在市', name: 'FamliyCity', index: 'FamliyCity', width: 80, align: '', sortable: true,
                //    formatter: function (cellvalue, options, rowObject) {
                //        return top.clientareaItem[cellvalue] == null ? "" : top.clientareaItem[cellvalue].FullName;
                //    }
                //},
                //{
                //    label: '家庭所在区', name: 'FamliyDistrict', index: 'FamliyDistrict', width: 80, align: '', sortable: true,
                //    formatter: function (cellvalue, options, rowObject) {
                //        return top.clientareaItem[cellvalue] == null ? "" : top.clientareaItem[cellvalue].FullName;
                //    }
                //},
                //{ label: '家庭地址', name: 'FamilyAddress', index: 'FamilyAddress', width: 80, align: '',sortable: true  },
                { label: '是否报到注册', name: 'RegisterStatus', index: 'RegisterStatus', width: 80, align: '',sortable: true  },
               
                { label: '邮政编码', name: 'PostalCode', index: 'PostalCode', width: 80, align: '',sortable: true  },
                {
                    label: '归档', name: 'TransMark', index: 'TransMark', width: 80, align: '', sortable: true, formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "已归档" : "未归档";
                    }
                },
                 //{ label: '收件人名址', name: 'MailAddress', index: 'MailAddress', width: 80, align: '',sortable: true  },
                //{ label: 'LogIp', name: 'LogIp', index: 'LogIp', width: 80, align: '',sortable: true  },
                //{ label: 'LogNum', name: 'LogNum', index: 'LogNum', width: 80, align: '',sortable: true  },
                //{ label: 'Logtime', name: 'Logtime', index: 'Logtime', width: 80, align: '',sortable: true  },
                //{ label: 'RecruitDeptNo', name: 'RecruitDeptNo', index: 'RecruitDeptNo', width: 80, align: '',sortable: true  },
                //{ label: 'RecruitMajorNo', name: 'RecruitMajorNo', index: 'RecruitMajorNo', width: 80, align: '',sortable: true  },
                //{ label: 'RegisterEmpNo', name: 'RegisterEmpNo', index: 'RegisterEmpNo', width: 80, align: '',sortable: true  },
                //{ label: 'RegisterEmpName', name: 'RegisterEmpName', index: 'RegisterEmpName', width: 80, align: '',sortable: true  },
                //{ label: 'ApprovedLeader', name: 'ApprovedLeader', index: 'ApprovedLeader', width: 80, align: '',sortable: true  },
                //{ label: 'ChangeReason', name: 'ChangeReason', index: 'ChangeReason', width: 80, align: '',sortable: true  },
                //{ label: 'ChangeDate', name: 'ChangeDate', index: 'ChangeDate', width: 80, align: '',sortable: true  },
                //{ label: 'TextNo', name: 'TextNo', index: 'TextNo', width: 80, align: '',sortable: true  },
                               //{ label: '来源地区码', name: 'ProvinceNo', index: 'ProvinceNo', width: 80, align: '',sortable: true  },
                //{ label: '原中学', name: 'HighSchoolNo', index: 'HighSchoolNo', width: 80, align: '',sortable: true  },
                { label: '家庭总人数', name: 'FamliyPeoples', index: 'FamliyPeoples', width: 80, align: '',sortable: true  },
                {
                    label: '三好', name: 'IsThreeGood', index: 'IsThreeGood', width: 50, align: '', formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '优干', name: 'IsExcellent', index: 'IsExcellent', width: 50, align: '', formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '一般学干部', name: 'IsNormalCadre', index: 'IsNormalCadre', width: 50, align: '', formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '省市前三', name: 'IsProvinceFirstThree', index: 'IsProvinceFirstThree', width: 50, align: '', formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '港澳台侨', name: 'OverseasChineseNo', index: 'OverseasChineseNo', width: 50, align: '', formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                { label: '残疾', name: 'Deformity', index: 'Deformity', width: 80, align: '',
                        formatter: function (cellvalue, options, rowObject) {
                            return cellvalue == 1 ? "是" : "否";
                        }
                },
                {
                    label: '单亲', name: 'SingleParent', index: 'SingleParent', width: 80, align: '',
                    formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '是否结婚', name: 'IsMarry', index: 'IsMarry', width: 80, align: '',
                    formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '孤儿', name: 'Orphan', index: 'Orphan', width: 80, align: '',
                    formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '烈士子女', name: 'MartyrChildren', index: 'MartyrChildren', width: 80, align: '',
                    formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '低保', name: 'BasicLivingAllowances', index: 'BasicLivingAllowances', width: 80, align: '',
                    formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                {
                    label: '电话卡是否本人身份证办理', name: 'PhoneNoUseId', index: 'PhoneNoUseId', width: 80, align: '',
                    formatter: function (cellvalue, options, rowObject) {
                        return cellvalue == 1 ? "是" : "否";
                    }
                },
                { label: '家长联系电话手机', name: 'ParentPhone', index: 'ParentPhone', width: 180, align: '',sortable: true  },
                { label: '家长联系电话座机', name: 'ParentTel', index: 'ParentTel', width: 180, align: '',sortable: true  },
                
                //{ label: '密码', name: 'StuPwd', index: 'StuPwd', width: 80, align: '',sortable: true  },
                //{ label: '分班', name: 'StuOther', index: 'StuOther', width: 80, align: '' },
               
                //{ label: '备用', name: 'StuOther4', index: 'StuOther4', width: 80, align: '',sortable: true  },
                //{ label: '备用', name: 'StuOther5', index: 'StuOther5', width: 80, align: '',sortable: true  },
                //{ label: '备用', name: 'StuOther6', index: 'StuOther6', width: 80, align: '',sortable: true  },
                //{ label: '备用', name: 'StuOther7', index: 'StuOther7', width: 80, align: '',sortable: true  },
                //{ label: '备用', name: 'StuOther8', index: 'StuOther8', width: 80, align: '',sortable: true  },
                //{ label: '备用', name: 'StuOther9', index: 'StuOther9', width: 80, align: '',sortable: true  },
                { label: '通知书打印次数', name: 'PrintNotice', index: 'PrintNotice', width: 80, align: '',sortable: true  },
            ],
            viewrecords: true,
            rowNum: 30,
            rowList: [30, 50, 100,150,200,250,300,500,1000],
            pager: "#gridPager",
            sortname: 'StuName',
            sortorder: 'desc',
            rownumbers: true,
            shrinkToFit: false,
            gridview: true,
            onSelectRow: function () {
                selectedRowIndex = $('#' + this.id).getGridParam('selrow');
            },
            gridComplete: function () {
                $('#' + this.id).setSelection(selectedRowIndex, false);
            },
            subGrid: true,
            subGridRowExpanded: function (subgrid_id, row_id) {                
                var keyValue = $gridTable.jqGrid('getRowData', row_id)['stuInfoId'];
                subgrid_table_id = subgrid_id + "_t";
                $("#" + subgrid_id).html("<table id='" + subgrid_table_id + "'></table>");
                $("#" + subgrid_table_id).jqGrid({
                    url: "../../CollegeMIS/BK_StuInfo/GetDetailsJson",
                    postData: { keyValue: keyValue },
                    datatype: "json",
                    height: "100%",
                    colModel: [
                { label: '序号', name: 'StuSocRelaId', index: 'StuSocRelaId', width: 80, align: '',hidden: true },
                //{ label: '学生ID号', name: 'stuInfoId', index: 'stuInfoId', width: 80, align: '' },
                { label: '姓名', name: 'SocRelaName', index: 'SocRelaName', width: 80, align: '',sortable: true  },
                { label: '类别', name: 'RelaType', index: 'RelaType', width: 80, align: '',sortable: true  },
                { label: '与学生关系', name: 'StuRela', index: 'StuRela', width: 80, align: ''  },
                { label: '年龄', name: 'Age', index: 'Age', width: 80, align: '',sortable: true  },
                { label: '工作（学习）单位', name: 'WorkPlace', index: 'WorkPlace', width: 150, align: ''  },
                { label: '职业', name: 'WorkName', index: 'WorkName', width: 80, align: ''  },
                { label: '身份证号', name: 'SocRelaIdNo', index: 'SocRelaIdNo', width: 180, align: ''  },
                { label: '联系方式', name: 'SocRelaPhone', index: 'SocRelaPhone', width: 150, align: ''  },
                { label: '其他', name: 'SocRelaOther', index: 'SocRelaOther', width: 80, align: '' },
                    ],
                    onSelectRow: function (chrowid, status)
                    {
                        subgrid_table_id = "";
                        secrow = null;
                        subgrid_table_id = this.id;
                        secrow = $gridTable.jqGrid('getRowData', row_id);
                    },
                    caption: "家庭成员及其他社会关系人员",
                    rowNum: "1000",
                    rownumbers: true,
                    shrinkToFit: false,
                    gridview: true,
                    hidegrid: false                    
                });
            }
        });
        //查询条件
        $("#queryCondition .dropdown-menu li").click(function () {
            var text = $(this).find('a').html();
            var value = $(this).find('a').attr('data-value');
            $("#queryCondition .dropdown-text").html(text).attr('data-value', value)
        });
        //查询事件
        $("#btn_Search").click(function () {
            var queryJson = {
                condition: $("#queryCondition").find('.dropdown-text').attr('data-value'),
                keyword: $("#txt_Keyword").val()
            }
            $gridTable.jqGrid('setGridParam', {
                postData: { queryJson: JSON.stringify(queryJson) },
                page: 1
            }).trigger('reloadGrid');
            $("#txt_Keyword").val("");           
        });
        //查询回车
        $('#txt_Keyword').bind('keypress', function (event) {
            if (event.keyCode == "13") {
                $('#btn_Search').trigger("click");
            }
        });

    }
    //新增
    function btn_add() {
        dialogOpen({
            id: 'Form',
            title: '添加新生信息',
            url: '/CollegeMIS/BK_StuInfo/Form',
            width: '1000px',
            height: '750px',
            callBack: function (iframeId) {
                top.frames[iframeId].AcceptClick();
            }
        });
    }
    //编辑
    function btn_edit() {
        var keyValue = $('#gridTable').jqGridRowValue('stuInfoId');
        if (checkedRow(keyValue)) {
            dialogOpen({
                id: 'Form',
                title: '编辑学生信息',
                url: '/CollegeMIS/BK_StuInfo/Form?keyValue=' + keyValue,
                width: '1000px',
                height: '750px',
                callBack: function (iframeId) {
                    top.frames[iframeId].AcceptClick();
                }
            })
        }
    }
    //删除
    function btn_delete() {
        var keyValue = $('#gridTable').jqGridRowValue( 'stuInfoId');
        if (keyValue) {
            $.RemoveForm({
                url: '../../CollegeMIS/BK_StuInfo/RemoveForm',
                param: { keyValue: keyValue },
                success: function (data) {
                    $('#gridTable').trigger('reloadGrid');
                }
            })
        } else {
            dialogMsg('请选择需要删除的新生数据导入      报到确认后的学生数据导入到此表中      同时分班（分配班号） 、学号！', 0);
        }
    }
    //详细
    function btn_details() {
        var keyValue = $('#gridTable').jqGridRowValue('stuInfoId');
        if (checkedRow(keyValue)) {
            dialogOpen({
                id: 'Form',
                title: '学生信息',
                url: '/CollegeMIS/BK_StuInfo/Form?keyValue=' + keyValue+'&isDeltail=true',
                width: '1000px',
                height: '750px',
                btn:null,
                callBack: function (iframeId) {
                    top.frames[iframeId].AcceptClick();
                }
            })
        }
    }

    //新增学生的家庭成员及其他社会关系人员
    function btn_addother()
    {
        var stuInfoId = $('#gridTable').jqGridRowValue('stuInfoId');//学生ID号
        var stuName = $('#gridTable').jqGridRowValue('StuName');//姓名

        if (!stuInfoId) {
            alert("请选择学生后再添加");
            return;
        }

        dialogOpen({
            id: 'Form',
            title: '增加'+stuName+'的家庭成员及其他社会关系人员信息',
            url: '/CollegeMIS/BK_StuSocRela/Form?stuInfoId=' + stuInfoId,
            width: '1000px',
            height: '750px',
            callBack: function (iframeId) {
                top.frames[iframeId].AcceptClick();
            }
        })

    }

    function btn_editother() {
        var stuInfoId =secrow['stuInfoId']; //学生ID号
        var stuName = secrow['StuName'];//姓名
        var keyValue = $("#" + subgrid_table_id).jqGridRowValue("StuSocRelaId");
        if (checkedRow(keyValue)) {
            dialogOpen({
                id: 'Form',
                title: '编辑' + stuName + '的家庭成员及其他社会关系人员信息',
                url: '/CollegeMIS/BK_StuSocRela/Form?stuInfoId=' + stuInfoId + "&keyValue=" + keyValue,
                width: '1000px',
                height: '750px',
                callBack: function (iframeId) {
                    top.frames[iframeId].AcceptClick();
                }
            })
        }
    }


    //导出
    function btn_export() {
        dialogOpen({
            id: "ExcelIExportDialog",
            title: '导出学生信息',
            url: '/Utility/ExcelExportForm?gridId=gridTable&filename=学生信息',
            width: "500px",
            height: "380px",
            callBack: function (iframeId) {
                top.frames[iframeId].AcceptClick();
            }, btn: ['导出Excel', '关闭']
        });
    }



    ///导入 url: "/Utility/ExcelImportForm?btnId=" + n.EnCode,
    function btn_import()
    {
        dialogOpen({
            id: 'ExcelImportForm',
            title: '导入学生信息',
            url: '/Utility/ExcelImportForm?btnId=ExcelImportForm',
            width: '1000px',
            height: '750px',
            callBack: function (iframeId) {
                top.frames[iframeId].AcceptClick();
            }
        });
    }

</script>
<div class="titlePanel">
    <div class="title-search">
        <table>
            <tr>
                <td>
                    <div id="queryCondition" class="btn-group">
                        <a class="btn btn-default dropdown-text" data-toggle="dropdown">选择条件</a>
                        <a class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a data-value="StuName">姓名</a></li>
                            <li><a data-value="StuNo">学号</a></li>
                            <li><a data-value="NoticeNo">通知书号</a></li>
                            <li><a data-value="IdentityCardNo">身份证号</a></li>
                        </ul>
                    </div>
                </td>
                <td>
                    <input id="txt_Keyword" type="text" class="form-control" placeholder="请输入要查询关键字" style="width: 200px;" />
                </td>
                <td style="padding-left: 5px;">
                    <a id="btn_Search" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;查询</a>
                </td>
            </tr>
        </table>
    </div>
    <div class="toolbar">
        <div class="btn-group">
            <a id="lr-addother" class="btn btn-info" onclick="btn_addother()"><i class="fa fa-plus"></i>新增成员或朋友</a>
            <a id="lr-editother" class="btn btn-info" onclick="btn_editother()"><i class="fa fa-pencil-square-o"></i>编辑成员或朋友</a>
        </div>

        <div class="btn-group">
            <a id="lr-replace" class="btn btn-default" onclick="reload()"><i class="fa fa-refresh"></i>&nbsp;刷新</a>
            <a id="lr-add" class="btn btn-default" onclick="btn_add()"><i class="fa fa-plus"></i>&nbsp;新增</a>
            <a id="lr-edit" class="btn btn-default" onclick="btn_edit()"><i class="fa fa-pencil-square-o"></i>&nbsp;编辑</a>
            <a id="lr-delete" class="btn btn-default" onclick="btn_delete()"><i class="fa fa-trash-o"></i>&nbsp;删除</a>
            <a id="lr-delete" class="btn btn-default" onclick="btn_details()"><i class="fa fa-list-alt"></i>&nbsp;详细</a>
        </div>
        <div class="btn-group">
            <a id="lr-import" class="btn btn-default" onclick="btn_import()"><i class="fa fa-sign-in"></i>&nbsp;导入</a>
            <a id="lr-export" class="btn btn-default" onclick="btn_export()"><i class="fa  fa-sign-out"></i>&nbsp;导出</a>
        </div>
        <script>$('.toolbar').authorizeButton()</script>
    </div>
</div>
<div class="gridPanel">
    <table id="gridTable"></table>
    <div id="gridPager"></div>
</div>
